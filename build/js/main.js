"use strict";function closeModal(){document.getElementsByClassName("modal-wrap_active")[0].classList.remove("modal-wrap_active"),document.getElementsByClassName("blur")[0].classList.remove("blur")}document.addEventListener("DOMContentLoaded",function(){var m=document.getElementsByClassName("knob__control")[0],p=document.getElementsByClassName("knob__value")[0],g=Array.from(document.getElementsByClassName("tick")),v=300,h=228,y=30,x=function(){for(var e=["transform","msTransform","webkitTransform","mozTransform","oTransform"],t=0;t<e.length;t++){var r=e[t];if(void 0!==document.body.style[r])return r}}();function n(e){return h=e&&h+2<=v?h+2:!e&&0<=h-2?h-2:h,function(){m.style[x]="rotate("+h+"deg)";var e=!0,t=!1,r=void 0;try{for(var n,i=g[Symbol.iterator]();!(e=(n=i.next()).done);e=!0){var s=n.value;s.classList.remove("active")}}catch(e){t=!0,r=e}finally{try{!e&&i.return&&i.return()}finally{if(t)throw r}}var o=Math.floor(h/2.381),a=!0,l=!1,c=void 0;try{for(var d,u=g.slice(0,o)[Symbol.iterator]();!(a=(d=u.next()).done);a=!0){var f=d.value;f.classList.add("active")}}catch(e){l=!0,c=e}finally{try{!a&&u.return&&u.return()}finally{if(l)throw c}}p.innerHTML="+"+Math.ceil(y/100*Math.round(h/v*100))}()}var r=document.getElementsByClassName("knob")[0];r.onmousedown=function(e){var r=e.pageX;document.onmousemove=function(e){e.pageX>r?n(!0):n(!1),r=e.pageX;var t=document.getElementsByClassName("knob")[0];document.onmouseup=function(){document.onmousemove=null,t.onmouseup=null},m.ondragstart=function(){return!1}}},r.ontouchstart=function(e){var t=e.changedTouches[0].pageX;r.ontouchmove=function(e){e.changedTouches[0].pageX>t?n(!0):n(!1),t=e.changedTouches[0].pageX}}},!1),document.addEventListener("DOMContentLoaded",function(){for(var e=document.getElementsByClassName("device-filter__item"),t=0;t<e.length;t++)e[t].addEventListener("click",function(){var e=document.getElementsByClassName("device-filter__item");if(console.log(e),this.classList.contains("device-filter__item_active"))if(console.log("active"),console.log(this),this.classList.contains("device-filter__item_show")){console.log("true");for(var t=0;t<e.length;t++)e[t].classList.remove("device-filter__item_show")}else{console.log("false");for(t=0;t<e.length;t++)e[t].classList.add("device-filter__item_show")}else{document.getElementsByClassName("device-filter__item_active")[0].classList.remove("device-filter__item_active"),this.classList.add("device-filter__item_active");for(t=0;t<e.length;t++)e[t].classList.remove("device-filter__item_show")}})},!1),document.addEventListener("DOMContentLoaded",function(){for(var r=document.getElementsByClassName("modal-trigger"),e=function(t){r[t].addEventListener("click",function(){var e=String(r[t].getAttribute("data-modal"));document.getElementsByClassName(e)[0].classList.add("modal-wrap_active"),document.getElementsByClassName("wrap")[0].classList.add("blur")})},t=0;t<r.length;t++)e(t)},!1),function(){function e(e,t){return[].slice.call((t||document).querySelectorAll(e))}if(window.addEventListener){var d=window.StyleFix={link:function(r){var t=r.href||r.getAttribute("data-href");try{if(!t||"stylesheet"!==r.rel||r.hasAttribute("data-noprefix"))return}catch(e){return}var n,i=t.replace(/[^\/]+$/,""),s=(/^[a-z]{3,10}:/.exec(i)||[""])[0],o=(/^[a-z]{3,10}:\/\/[^\/]+/.exec(i)||[""])[0],a=/^([^?]*)\??/.exec(t)[1],l=r.parentNode,c=new XMLHttpRequest;c.onreadystatechange=function(){4===c.readyState&&n()},n=function(){if((e=c.responseText)&&r.parentNode&&(!c.status||c.status<400||600<c.status)){if((e=d.fix(e,!0,r))&&i){var e=e.replace(/url\(\s*?((?:"|')?)(.+?)\1\s*?\)/gi,function(e,t,r){return/^([a-z]{3,10}:|#)/i.test(r)?e:/^\/\//.test(r)?'url("'+s+r+'")':/^\//.test(r)?'url("'+o+r+'")':/^\?/.test(r)?'url("'+a+r+'")':'url("'+i+r+'")'}),t=i.replace(/([\\\^\$*+[\]?{}.=!:(|)])/g,"\\$1");e=e.replace(RegExp("\\b(behavior:\\s*?url\\('?\"?)"+t,"gi"),"$1")}(t=document.createElement("style")).textContent="/*# sourceURL="+r.getAttribute("href")+" */\n/*@ sourceURL="+r.getAttribute("href")+" */\n"+e,t.media=r.media,t.disabled=r.disabled,t.setAttribute("data-href",r.getAttribute("href")),r.id&&(t.id=r.id),l.insertBefore(t,r),l.removeChild(r),t.media=r.media}};try{c.open("GET",t),c.send(null)}catch(e){"undefined"!=typeof XDomainRequest&&((c=new XDomainRequest).onerror=c.onprogress=function(){},c.onload=n,c.open("GET",t),c.send(null))}r.setAttribute("data-inprogress","")},styleElement:function(e){if(!e.hasAttribute("data-noprefix")){var t=e.disabled;e.textContent=d.fix(e.textContent,!0,e),e.disabled=t}},styleAttribute:function(e){var t=e.getAttribute("style");t=d.fix(t,!1,e);e.setAttribute("style",t)},process:function(){e('link[rel="stylesheet"]:not([data-inprogress])').forEach(StyleFix.link),e("style").forEach(StyleFix.styleElement),e("[style]").forEach(StyleFix.styleAttribute)},register:function(e,t){(d.fixers=d.fixers||[]).splice(void 0===t?d.fixers.length:t,0,e)},fix:function(e,t,r){if(d.fixers)for(var n=0;n<d.fixers.length;n++)e=d.fixers[n](e,t,r)||e;return e},camelCase:function(e){return e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()}).replace("-","")},deCamelCase:function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()})}};setTimeout(function(){e('link[rel="stylesheet"]').forEach(StyleFix.link)},10),document.addEventListener("DOMContentLoaded",StyleFix.process,!1)}}(),function(l){function s(e,t,r,n,i){return(e=c[e]).length&&(e=RegExp(t+"("+e.join("|")+")"+r,"gi"),i=i.replace(e,n)),i}if(window.StyleFix&&window.getComputedStyle){var c=window.PrefixFree={prefixCSS:function(e,t,r){var n=c.prefix;if(-1<c.functions.indexOf("linear-gradient")&&(e=e.replace(/(\s|:|,)(repeating-)?linear-gradient\(\s*(-?\d*\.?\d*)deg/gi,function(e,t,r,n){return t+(r||"")+"linear-gradient("+(90-n)+"deg"})),e=s("functions","(\\s|:|,)","\\s*\\(","$1"+n+"$2(",e),e=s("keywords","(\\s|:)","(\\s|;|\\}|$)","$1"+n+"$2$3",e),e=s("properties","(^|\\{|\\s|;)","\\s*:","$1"+n+"$2:",e),c.properties.length){var i=RegExp("\\b("+c.properties.join("|")+")(?!:)","gi");e=s("valueProperties","\\b",":(.+?);",function(e){return e.replace(i,n+"$1")},e)}return t&&(e=s("selectors","","\\b",c.prefixSelector,e),e=s("atrules","@","\\b","@"+n+"$1",e)),(e=e.replace(RegExp("-"+n,"g"),"-")).replace(/-\*-(?=[a-z]+)/gi,c.prefix)},property:function(e){return(0<=c.properties.indexOf(e)?c.prefix:"")+e},value:function(e,t){return e=s("functions","(^|\\s|,)","\\s*\\(","$1"+c.prefix+"$2(",e),e=s("keywords","(^|\\s)","(\\s|$)","$1"+c.prefix+"$2$3",e),0<=c.valueProperties.indexOf(t)&&(e=s("properties","(^|\\s|,)","($|\\s|,)","$1"+c.prefix+"$2$3",e)),e},prefixSelector:function(e){return c.selectorMap[e]||e},prefixProperty:function(e,t){var r=c.prefix+e;return t?StyleFix.camelCase(r):r}};!function(){var r={},n=[],e=getComputedStyle(document.documentElement,null),i=document.createElement("div").style,t=function(e){if("-"===e.charAt(0)){n.push(e);var t=(e=e.split("-"))[1];for(r[t]=++r[t]||1;3<e.length;)e.pop(),t=e.join("-"),StyleFix.camelCase(t)in i&&-1===n.indexOf(t)&&n.push(t)}};if(e&&0<e.length)for(var s=0;s<e.length;s++)t(e[s]);else for(var o in e)t(StyleFix.deCamelCase(o));var a,l;s=0;for(l in r)s<(e=r[l])&&(a=l,s=e);for(c.prefix="-"+a+"-",c.Prefix=StyleFix.camelCase(c.prefix),c.properties=[],s=0;s<n.length;s++)0===(o=n[s]).indexOf(c.prefix)&&(a=o.slice(c.prefix.length),StyleFix.camelCase(a)in i||c.properties.push(a));!("Ms"!=c.Prefix||"transform"in i||"MsTransform"in i)&&"msTransform"in i&&c.properties.push("transform","transform-origin"),c.properties.sort()}(),function(){function e(e,t){return i[t]="",i[t]=e,!!i[t]}var t={"linear-gradient":{property:"backgroundImage",params:"red, teal"},calc:{property:"width",params:"1px + 5%"},element:{property:"backgroundImage",params:"#foo"},"cross-fade":{property:"backgroundImage",params:"url(a.png), url(b.png), 50%"},"image-set":{property:"backgroundImage",params:"url(a.png) 1x, url(b.png) 2x"}};t["repeating-linear-gradient"]=t["repeating-radial-gradient"]=t["radial-gradient"]=t["linear-gradient"];var r={initial:"color",grab:"cursor",grabbing:"cursor","zoom-in":"cursor","zoom-out":"cursor",box:"display",flexbox:"display","inline-flexbox":"display",flex:"display","inline-flex":"display",grid:"display","inline-grid":"display","max-content":"width","min-content":"width","fit-content":"width","fill-available":"width","contain-floats":"width"};c.functions=[],c.keywords=[];var n,i=document.createElement("div").style;for(n in t){var s,o=(s=t[n]).property;!e(s=n+"("+s.params+")",o)&&e(c.prefix+s,o)&&c.functions.push(n)}for(var a in r)!e(a,o=r[a])&&e(c.prefix+a,o)&&c.keywords.push(a)}(),function(){function e(e){return i.textContent=e+"{}",!!i.sheet.cssRules.length}var t={":any-link":null,"::backdrop":null,":fullscreen":null,":full-screen":":fullscreen","::placeholder":null,":placeholder":"::placeholder","::input-placeholder":"::placeholder",":input-placeholder":"::placeholder",":read-only":null,":read-write":null,"::selection":null},r={keyframes:"name",viewport:null,document:'regexp(".")'};c.selectors=[],c.selectorMap={},c.atrules=[];var n,i=l.appendChild(document.createElement("style"));for(n in t){var s=t[n]||n,o=n.replace(/::?/,function(e){return e+c.prefix});!e(s)&&e(o)&&(c.selectors.push(s),c.selectorMap[s]=o)}for(var a in r)!e("@"+(t=a+" "+(r[a]||"")))&&e("@"+c.prefix+t)&&c.atrules.push(a);l.removeChild(i)}(),c.valueProperties=["transition","transition-property","will-change"],l.className+=" "+c.prefix,StyleFix.register(c.prefixCSS)}}(document.documentElement);var container=void 0,step=void 0,promStep=void 0,nextPosition=void 0;function scrollNext(e,t){container=document.getElementsByClassName(e)[0],step=container.hasAttribute("offset")?container.clientWidth-parseInt(container.getAttribute("offset")):container.clientWidth,promStep=Math.ceil(container.scrollLeft/step),nextPosition=Number.isInteger(Math.ceil(container.scrollLeft)/step)?(promStep+1)*step:promStep*step,container.scrollLeft=nextPosition}function scrollPrev(e){container=document.getElementsByClassName(e)[0],step=container.hasAttribute("offset")?container.clientWidth-parseInt(container.getAttribute("offset")):container.clientWidth,promStep=Math.floor(container.scrollLeft/step),nextPosition=Number.isInteger(container.scrollLeft/step)?(promStep-1)*step:promStep*step,container.scrollLeft=nextPosition}function filterSelection(e){var t,r;for(t=document.getElementsByClassName("card_horisontal-filter"),"all"==e&&(e=""),r=0;r<t.length;r++)w3RemoveClass(t[r],"card_horisontal-filter-show"),-1<t[r].className.indexOf(e)&&w3AddClass(t[r],"card_horisontal-filter-show")}function w3AddClass(e,t){var r,n,i;for(n=e.className.split(" "),i=t.split(" "),r=0;r<i.length;r++)-1==n.indexOf(i[r])&&(e.className+=" "+i[r])}function w3RemoveClass(e,t){var r,n,i;for(n=e.className.split(" "),i=t.split(" "),r=0;r<i.length;r++)for(;-1<n.indexOf(i[r]);)n.splice(n.indexOf(i[r]),1);e.className=n.join(" ")}document.addEventListener("DOMContentLoaded",function(){for(var s=document.getElementsByClassName("scroll-block"),e=function(e){var t=s[e],r=Array.prototype.slice.call(document.getElementsByClassName(String(t.dataset.controls))),n=r[0].getElementsByClassName("scroll-control__next")[0].getElementsByClassName("svg-scroll-arrow")[0],i=r[0].getElementsByClassName("scroll-control__prev")[0].getElementsByClassName("svg-scroll-arrow")[0];t.scrollWidth==t.clientWidth&&r[0].remove(),s[e].onscroll=function(){this.scrollWidth==this.scrollLeft+this.clientWidth?(n.classList.remove("svg-scroll-arrow_active"),i.classList.add("svg-scroll-arrow_active")):0==this.scrollLeft?(n.classList.add("svg-scroll-arrow_active"),i.classList.remove("svg-scroll-arrow_active")):(n.classList.add("svg-scroll-arrow_active"),i.classList.add("svg-scroll-arrow_active"))}},t=0;t<s.length;t++)e(t);document.getElementsByClassName("favor-cards")[0].onscroll=function(){var e=document.getElementsByClassName("arrow-reminder")[0];0==this.scrollTop?e.classList.remove("arrow-reminder_inactive"):e.classList.add("arrow-reminder_inactive")}},!1),filterSelection("all"),document.addEventListener("DOMContentLoaded",function(){for(var e=document.getElementsByClassName("select-filter__item"),t=0;t<e.length;t++)e[t].addEventListener("click",function(){this.parentElement.getElementsByClassName("select-filter__item_active")[0].classList.remove("select-filter__item_active"),this.classList.add("select-filter__item_active")})},!1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
